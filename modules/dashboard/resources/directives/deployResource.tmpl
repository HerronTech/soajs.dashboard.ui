<alert type="info" class="tip-alert w100 table" ng-if="formData.deployOptions.custom.name">
	<h3 class="f-left"><span class="icon icon-info"></span>&nbsp;Tip</h3>
	<p class="f-left">
		Make sure that the hostname under <b>Driver Configuration</b> matches: <b>"{{options.computedHostname}}"</b>
	</p>
</alert>
<br/>

<div>
	<label>Deployment Name</label>
	<input type="text" class="form-control" ng-model="formData.deployOptions.custom.name" ng-required="true" ng-disabled="true"/>
	<label class="fieldMsg">Choose a name for the new deployment, deployment name should be small letters only</label>
	<br/>
</div>

<div ng-if="displayPlatformPicker">
	<label>Deployment Platform</label>
	<select class="form-control"  ng-required="true" ng-model="formData.deployOptions.deployConfig.type" ng-change="updateDeploymentName(formData.name, true)">
		<option value="vm">Bare Metal Virtual Machine</option>
		<option value="container">Container Technology</option>
	</select>
	<label class="fieldMsg">Choose how you want to deploy this resource.</label>
</div>

<fieldset class="custom-fieldset" ng-if="formData.deployOptions.deployConfig.type && formData.deployOptions.deployConfig.type !== ''">
	<legend>Deployment Options</legend>

	<div ng-if="formData.deployOptions.deployConfig.type === 'container'">

		<div>
			<br />
			<label>Catalog Recipe</label>
			<select class="form-control" ng-disabled="mainData.resourceDeployed && options.formAction === 'update' && formData.deployOptions.recipe" ng-required="true" ng-options="recipe._id as recipe.name group by recipe.type for recipe in mainData.recipes" ng-model="formData.deployOptions.recipe" ng-change="displayRecipeInputs(true, true)" ng-show="mainData.recipes.length > 0"></select>
			<alert type="warning" ng-show="mainData.recipes.length === 0" class="c-both">
				<p>
					No Catalog Recipes found that can be used to deploy this resource on the platform you have selected, <a href="" ng-click="gotorecipes();">Click Here</a> to create a new recipe.
				</p>
			</alert>
			<label class="fieldMsg">Choose a catalog recipe to use when deploying this resource</label>
			<br>
			<br>
		</div>

		<div>
			<label>Memory Limit</label>
			<input type="number" class="form-control" ng-model="formData.deployOptions.deployConfig.memoryLimit" ng-required="true"/>
			<label class="fieldMsg">Memory limit per instance (in MBytes)</label>
			<br/>
		</div>

		<div ng-if="options.envPlatform === 'kubernetes'">
			<label>CPU Limit Per Instance</label>
			<input type="text" class="form-control" placeholder="100m or 0.1" ng-model="formData.deployOptions.deployConfig.cpuLimit" ng-required="formData.deployOptions.autoScale"/>
			<label class="fieldMsg">Specify the Maximum cpu limit (in millicpu or decimal point) that should be provided
				when running your resource. Click
				<a href="https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#meaning-of-cpu" target="_blank">here </a>for
				more information.</label>
			<br/>
		</div>

		<div ng-if="mainData.recipeUserInput.image.override">
			<div ng-init="formData.deployOptions.custom.image.prefix = mainData.recipeUserInput.image.prefix">
				<label>Image Prefix</label>
				<input type="text" class="form-control" ng-model="formData.deployOptions.custom.image.prefix"/>
				<div class="fieldMsg">Override the image prefix if you want</div>
				<br/>
			</div>
			<div ng-init="formData.deployOptions.custom.image.name = mainData.recipeUserInput.image.name">
				<label>Image Name</label>
				<input type="text" class="form-control" ng-model="formData.deployOptions.custom.image.name"/>
				<div class="fieldMsg">Override the image name if you want</div>
				<br/>
			</div>
			<div ng-init="formData.deployOptions.custom.image.tag = mainData.recipeUserInput.image.tag">
				<label>Image Tag</label>
				<input type="text" class="form-control" ng-model="formData.deployOptions.custom.image.tag"/>
				<div class="fieldMsg">Override the image tag if you want</div>
				<br/>
			</div>
		</div>

		<div ng-repeat="(env, envData) in mainData.recipeUserInput.envs" ng-init="formData.deployOptions.custom.env[env] = envData.default">
			<label>{{envData.label || envData.name}}</label>
			<input type="text" class="form-control" ng-model="formData.deployOptions.custom.env[env]" ng-required="envData.required"/>
			<div class="fieldMsg">{{envData.fieldMsg}}</div>
			<br/>
		</div>

		<div ng-if="mainData.catalogConflictingPorts !== ''">
			<alert type='danger'>Unable to proceed, Detected port conflict in Catalog recipe: {{mainData.catalogConflictingPorts}}</alert>
		</div>
		<div ng-if="mainData.catalogConflictingPorts === ''">
			<fieldset class="custom-fieldset" ng-if="sourceCodeConfig.configuration.isEnabled">
				<legend>{{selectedSourceCode.configuration.label}}</legend>
				<div>
					<label>Repository</label>
					<select class="form-control" ng-required="sourceCodeConfig.configuration.repoAndBranch.required" ng-options="repo.name as repo.name group by repo.owner for repo in mainData.configRepos.config" ng-model="formData.deployOptions.sourceCode.configuration.repo" ng-change="fetchBranches('conf')" ng-disabled="sourceCodeConfig.configuration.repoAndBranch.disabled"></select>
					<label class="fieldMsg">Choose your configuration repository</label>
					<br>
				</div>

				<div ng-if="formData.deployOptions.sourceCode.configuration.repo && formData.deployOptions.sourceCode.configuration.repo !== '-- Leave Empty --'">
					<label>Branch<img class="loadingImage" ng-src="themes/default/img/loading.gif" ng-if="mainData.configReposBranchesStatus[formData.deployOptions.sourceCode.configuration.repo]==='loading'"></label>
					<select class="form-control" ng-required="sourceCodeConfig.configuration.repoAndBranch.required" ng-options="branch.name as branch.name for branch in mainData.configReposBranches[formData.deployOptions.sourceCode.configuration.repo]" ng-model="formData.deployOptions.sourceCode.configuration.branch" ng-disabled="sourceCodeConfig.configuration.repoAndBranch.disabled"></select>
					<label class="fieldMsg">Choose your branch</label>
					<br>
				</div>

				<div ng-if="formData.deployOptions.sourceCode.configuration.repo && formData.deployOptions.sourceCode.configuration.repo !== '-- Leave Empty --'">
					<label>Path</label>
					<input type="text" class="form-control" ng-model="formData.deployOptions.sourceCode.configuration.path" ng-required="false"/>
					<label class="fieldMsg">Unless specified, the root will be used</label>
				</div>
			</fieldset>
			<fieldset class="custom-fieldset" ng-if="sourceCodeConfig.custom.isEnabled">
				<legend>{{selectedSourceCode.custom.label}}</legend>
				<div>
					<label>Repository</label>
					<select class="form-control" ng-required="sourceCodeConfig.custom.repoAndBranch.required" ng-options="(repo.name + '__SOAJS_DELIMITER__' + repo.subName) as (repo.subName?(repo.name + ' - ' + repo.subName):repo.name) group by repo.owner for repo in mainData.configRepos.customType" ng-model="formData.deployOptions.sourceCode.custom.repo" ng-change="fetchBranches('cust')" ng-disabled="sourceCodeConfig.custom.repoAndBranch.disabled">
					</select>
					<label class="fieldMsg">Choose your custom code repository</label>
					<br>
				</div>

				<div ng-if="formData.deployOptions.sourceCode.custom.repo && selectedCustomClear !== '-- Leave Empty --'">
					<label>Branch<img class="loadingImage" ng-src="themes/default/img/loading.gif" ng-if="mainData.configReposBranchesStatus[selectedCustomClear]==='loading'"></label>
					<select class="form-control" ng-required="sourceCodeConfig.custom.repoAndBranch.required" ng-options="branch.name as branch.name for branch in mainData.configReposBranches[selectedCustomClear]" ng-model="formData.deployOptions.sourceCode.custom.branch" ng-disabled="sourceCodeConfig.custom.repoAndBranch.disabled"></select>
					<label class="fieldMsg">Choose your branch</label>
					<br>
				</div>

				<div ng-if="formData.deployOptions.sourceCode.custom.repo && selectedCustomClear !== '-- Leave Empty --'">
					<label>Path</label>
					<input type="text" class="form-control" ng-model="formData.deployOptions.sourceCode.custom.path" ng-required="false" ng-disabled="sourceCodeConfig.custom.repoPath.disabled"/>
					<label class="fieldMsg">Unless specified, the root will be used</label>
				</div>
			</fieldset>
			<fieldset class="custom-fieldset" ng-if="formData.deployOptions.custom && formData.deployOptions.custom.ports && publishPorts">
				<legend>Published Ports</legend>
				<div ng-if="formData.deployOptions.custom.loadBalancer">
					<label>Load Balancer</label>
					<label class="toggleSwitch f-right"><input type="checkbox" ng-model="formData.deployOptions.custom.loadBalancer" ng-value="formData.deployOptions.custom.loadBalancer"  ng-disabled=true><span class="buttonSlider round"></span></label>
					<label class="fieldMsg">This recipe allows LoadBalancer port configuration only.</label>
					<br/><br/>
				</div>
				<div ng-repeat="exposedPorts in formData.deployOptions.custom.ports" ng-if="!formData.deployOptions.custom.loadBalancer">
					<fieldset class="custom-fieldset" ng-if="exposedPorts.isPublished || exposedPorts.published">
						<legend class="capitalize">{{exposedPorts.name}} : {{exposedPorts.target}}</legend>
						<div>
							<label>Published Port</label>
							<input type="number" class="form-control" ng-model="exposedPorts.published" ng-disabled=false min="1" max="65000" ng-required="true" ng-change="onExposedPortsUpdate()"/>
							<label class="fieldMsg">Detected Published Port <b>{{exposedPorts.name}}</b> with internal value <b>{{exposedPorts.target}}</b>.
								Enter a value if you want to expose this resource to a specific port; Port values are limited to a range between 0 and 65000.
							</label>
						</div>
					</fieldset>
				</div>
				<br>
			</fieldset>
			<fieldset class="custom-fieldset resource" ng-if="secrets && mainData.secretsAllowed !=='none'">
				<legend>Secrets</legend>
				<div>
					<ui-select multiple theme="bootstrap" ng-model="formData.deployOptions.custom.secrets" close-on-select="false" title="Choose a Secret"  close-on-select="true" ng-required="mainData.secretsAllowed === 'required'">
						<ui-select-match placeholder="Select secret...">{{$item.name}}</ui-select-match>
						<ui-select-choices repeat="secret in secrets | filter: {name: $select.search}">
							<div ng-bind-html="secret.name | highlight: $select.search"></div>
							<small>
								id: {{secret.uid}}
							</small>
						</ui-select-choices>
					</ui-select>
				</div>
				<fieldset ng-if="formData.deployOptions.custom.secrets && formData.deployOptions.custom.secrets.length > 0" >
					<legend>Mount Path</legend>
					<div ng-repeat="secret in formData.deployOptions.custom.secrets">
						<label class = "secretMountPathResource" >{{secret.name}}</label><br />
						<input type="text" class="form-control secretMountPathResource" ng-model="secret.mountPath" ng-disabled="false" ng-required="true"/>
						<label class="fieldMsg">Provide a mount path for your secret. Mount path are used from within the containers.</label>
						<br /><br/>
					</div>
				</fieldset>

			</fieldset>
			<fieldset class="custom-fieldset">
				<legend>Environment Scaling</legend>
				<div>
					<label>Deployment Mode</label>
					<select class="form-control" ng-required="true" ng-options="mode.value as mode.label for mode in options.deploymentModes" ng-model="formData.deployOptions.deployConfig.replication.mode"></select>
					<br/><br/>
				</div>
				<div ng-if="!options.enableAutoScale && (formData.deployOptions.deployConfig.replication.mode == 'replicated' || formData.deployOptions.deployConfig.replication.mode == 'deployment')">
					<label>Replica Count</label>
					<input type="number" class="form-control" ng-model="formData.deployOptions.deployConfig.replication.replicas" ng-required="true"/>
					<br/><br/>
				</div>
				<fieldset ng-if="options.envPlatform === 'kubernetes' && formData.deployOptions.deployConfig.replication.mode === 'deployment'" ng-class="{'autoScale':!options.enableAutoScale}">
					<legend>Auto Scale <label class="switch"><input type="checkbox" ng-model="options.enableAutoScale"><span class="buttonSlider round"></span></label></legend>
					<fieldset ng-if="options.enableAutoScale">
						<legend>Metrics</legend>
						<div>
							<label>CPU</label>
							<input type="number" class="form-control" ng-model="formData.deployOptions.autoScale.metrics.cpu.percent" ng-required="true"/>
							<label class="fieldMsg">Enter CPU percentage</label>
							<br>
						</div>
					</fieldset>
					<fieldset ng-if="options.enableAutoScale">
						<legend>Replicas</legend>
						<div>
							<label>min</label>
							<input type="number" class="form-control" ng-model="formData.deployOptions.autoScale.replicas.min" ng-required="true"/>
							<label class="fieldMsg">Enter minimum Replica Count that is greater or equal to 1</label>
							<br>
						</div>
						<div>
							<label>max</label>
							<input type="number" class="form-control" ng-model="formData.deployOptions.autoScale.replicas.max" ng-required="true"/>
							<label class="fieldMsg">Enter maximum Replica Count that is greater or equal to 1</label>
							<br>
						</div>
					</fieldset>
				</fieldset>
			</fieldset>
		</div>
	</div>

	<div ng-if="formData.deployOptions.deployConfig.type ==='vm'">

		<div ng-if="mainData.deploymentData.vmLayers">
			<div>
				<label>VM Layer</label>
				<!--<select name="vmLayer" class="form-control"  ng-required="true" ng-options="layerName as layerName for (layerName, layerInstances) in mainData.deploymentData.vmLayers" ng-model="formData.deployOptions.deployConfig.vmConfiguration.vmLayer" ng-change="getCatalogRecipes(); buildComputedHostname(formData.deployOptions.custom.name);"></select>-->
				<select name="vmLayer" class="form-control"  ng-required="true" ng-options="layerName as layerName for (layerName, layerInstances) in mainData.deploymentData.vmLayers" ng-model="formData.deployOptions.deployConfig.vmConfiguration.vmLayer" ng-change="getCatalogRecipes();"></select>
				<label class="fieldMsg">Choose the VM layer</label>
			</div>

			<div ng-if="formData.deployOptions.deployConfig.vmConfiguration.vmLayer">
				<alert type="warning" ng-if="mainData.deploymentData.vmLayers[formData.deployOptions.deployConfig.vmConfiguration.vmLayer].list">
					<span ng-if="mainData.deploymentData.vmLayers[formData.deployOptions.deployConfig.vmConfiguration.vmLayer].list.length === 1">This resource will be deployed in <strong>1</strong> instance.</span>
					<span ng-if="mainData.deploymentData.vmLayers[formData.deployOptions.deployConfig.vmConfiguration.vmLayer].list.length > 1">This resource will be deployed on <strong>{{mainData.deploymentData.vmLayers[formData.deployOptions.deployConfig.vmConfiguration.vmLayer].list.length}}</strong> instances.</span>
				</alert>
			</div>

		</div>

		<div ng-show="(formData.deployOptions.deployConfig.type ==='vm' && formData.deployOptions.deployConfig.vmConfiguration.vmLayer)">
			<br />
			<label>Catalog Recipe</label>
			<select class="form-control" ng-disabled="mainData.resourceDeployed && options.formAction === 'update' && formData.deployOptions.recipe" ng-required="true" ng-options="recipe._id as recipe.name group by recipe.type for recipe in mainData.recipes" ng-model="formData.deployOptions.recipe" ng-change="displayRecipeInputs(true, true)" ng-show="mainData.recipes.length > 0"></select>
			<alert type="warning" ng-show="mainData.recipes.length === 0" class="c-both">
				<p>
					No Catalog Recipes found that can be used to deploy this resource on the platform you have selected, <a href="" ng-click="gotorecipes();">Click Here</a> to create a new recipe.
				</p>
			</alert>
			<label class="fieldMsg">Choose a catalog recipe to use when deploying this resource</label>
			<br>
			<br>
		</div>

		<div ng-repeat="(env, envData) in mainData.recipeUserInput.envs" ng-init="formData.deployOptions.custom.env[env] = envData.default">
			<label>{{envData.label || envData.name}}</label>
			<input type="text" class="form-control" ng-model="formData.deployOptions.custom.env[env]" ng-required="envData.required"/>
			<div class="fieldMsg">{{envData.fieldMsg}}</div>
			<br/>
		</div>

		<fieldset class="custom-fieldset" ng-if="mainData.deploymentData.selectedRecipe.recipe.deployOptions.image.override">
			<legend>Image</legend>
			<label>Provider</label>
			<input name="provider"  class="form-control" ng-required="false" ng-model="formData.custom.image.prefix" ng-disabled="true"></input>
			<label class="fieldMsg">Choose your provider</label>
			<br/>

			<label>Image Name</label>
			<input name="image" class="form-control" ng-required="false" ng-model="formData.custom.image.name" ng-disabled="true"></input>
			<label class="fieldMsg">Choose your image</label>
			<br/>

			<label>version</label>
			<input name="version"  class="form-control" ng-required="false" ng-model="formData.custom.image.tag" ng-disabled="true"></input>
			<label class="fieldMsg">Choose your version</label>
			<br/>

			<!--TODO: code ON HOLD-->
			<!--<legend>Image</legend>-->
			<!--<label>Provider</label>-->
			<!--<select name="provider"  class="form-control" ng-change="getImagesList(formData.custom.image.prefix)" ng-options="prefix.v as prefix.l for prefix in mainData.deploymentData.providers"  ng-required="true" ng-model="formData.custom.image.prefix"></select>-->
			<!--<label class="fieldMsg">Choose your provider</label>-->
			<!--<br/>-->

			<!--<label>Image Name</label>-->
			<!--<select name="image"   class="form-control" ng-change="getVersionsList(formData.custom.image.name)" ng-options="image.v as image.l for image in mainData.deploymentData.images" ng-required="true"   ng-model="formData.custom.image.name"></select>-->
			<!--<label class="fieldMsg">Choose your image</label>-->
			<!--<br/>-->

			<!--<label>version</label>-->
			<!--<select name="version"  class="form-control"  ng-required="true" ng-options="version.v as version.l for version in mainData.deploymentData.imageVersions" ng-model="formData.custom.image.tag"></select>-->
			<!--<label class="fieldMsg">Choose your version</label>-->
			<!--<br/>-->
		</fieldset>

		<fieldset class="custom-fieldset" ng-if="formData.deployOptions.custom && formData.deployOptions.custom.ports">
			<legend>Published Ports</legend>
			<alert type="info" class="tip-alert w100 table" ng-if="formData.invalidVmLayerPortsData && formData.invalidVmLayerPortsData.ports && formData.invalidVmLayerPortsData.ports.length > 0">
				<h3><span class="icon icon-warning"></span>&nbsp;Port Configuration</h3><br>
				<p>
					<span ng-if="!environmentWizard">
					The selected layer <b>{{formData.deployOptions.deployConfig.vmConfiguration.vmLayer}}</b> is not configured to allow traffic on the following ports:
					</span>

					<span ng-if="environmentWizard">
					The selected layer <b>{{formData.deployOptions.deployConfig.vmConfiguration.vmLayer}}</b> might not be configured to allow traffic on the following ports:
					</span>
					<ul>
						<li ng-repeat="invalidPort in formData.invalidVmLayerPortsData.ports">{{invalidPort.name}} port -> Source port: {{invalidPort.published}} and Destination port: {{invalidPort.target}}</li>
					</ul>

					These ports will be automatically configured during deployment.
				</p>
			</alert>
			<div ng-repeat="exposedPorts in formData.deployOptions.custom.ports">
				<fieldset class="custom-fieldset" ng-if="exposedPorts.isPublished || exposedPorts.published">
					<legend class="capitalize">{{exposedPorts.name}}</legend>
					<div>
						<div class="green" ng-if="!environmentWizard && formData.deployOptions.deployConfig.type ==='vm' && exposedPorts.availableInVmLayer">
							<span class="icon icon-checkmark"></span> Port is available in VM Layer
						</div>
						<div style="color: #31708f;" ng-if="!environmentWizard && formData.deployOptions.deployConfig.type ==='vm' && !exposedPorts.availableInVmLayer">
							<span class="icon icon-warning"></span> Port will be added to VM Layer
						</div>
						<label>Published Port</label>
						<input type="number" class="form-control" ng-model="exposedPorts.published" ng-disabled="vmExposedPortsDisabled" min="1" max="65535" ng-required="true" ng-change="onExposedPortsUpdate()"/>
						<label class="fieldMsg">Detected Published Port <b>{{exposedPorts.name}}</b> with internal value
							Enter a value if you want to expose this resource to a specific port; Port values are
							limited to a range between 0 and 65535.
						</label>
					</div>
				</fieldset>
			</div>
		</fieldset>

	</div>
</fieldset>
