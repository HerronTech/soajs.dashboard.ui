<div ng-show="form.formData.deploy">
	<alert type="info">
		<h4>SOAJS Nginx</h4>
		<hr/>
		<p>
			The Nginx is a web server that serves static UI content to your frontend and forwards requests to APIs deployed in your environment.<br />
			The Nginx binds itself to the environment sub domain(s) and listens on their ports.
		</p>
		<h4 class="capitalize">Sub Domains:</h4>
		<ul>
			<li>&raquo;&nbsp;&nbsp;<b>API:</b>&nbsp;&nbsp;forwards requests to APIs deployed in this environment <span ng-show="form.formData.domain">—></span> <span class="red" ng-show="form.formData.domain">{{form.formData.apiPrefix}}.{{form.formData.domain}}</span></li>
			<li>&raquo;&nbsp;&nbsp;<b>SITE:</b>&nbsp;&nbsp;servers static UI content (HTML) <span ng-show="form.formData.domain">—></span> <span class="red" ng-show="form.formData.domain">{{form.formData.sitePrefix}}.{{form.formData.domain}}</span></li>
		</ul>
		<hr />
		<h4 class="capitalize">{{form.formData.mode}} Mode Deployment</h4>
		<p>
			Nginx will be deployed as {{form.formData.mode}} mode on each machine allowing it to capture the real IP value when requests arrive to the this environment.
		</p>
		<hr />
		<p>
			<u>Note:</u><br />
			The Nginx <b>API</b> and the deployer use the same sub domain When deploying an environment on multiple machines.<br>
		</p>
	</alert>
	
	<table width="100%" cellspacing="0" cellpadding="0" border="0">
		<tbody>
			<tr class="form-group">
				<td>
					<div id="domain-wrapper">
						<div>
							<label class="ng-binding">Domain</label>
							<input class="form-control" ng-model="form.formData.domain" ng-pattern="domainRegex" type="text" placeholder="mydomain.com" ng-required="tempFormEntries.domain.required"/>
							<div class="fieldMsg hint">Enter the domain associated with this environment</div>
						</div>
					</div>
				</td>
			</tr>
			<tr class="form-group">
				<td>
					<div id="apiPrefix-wrapper">
						<div>
							<label class="ng-binding">API (Sub Domain)</label> <span class="red">{{form.formData.apiPrefix}}.{{form.formData.domain}}</span>
							<input class="form-control" ng-model="form.formData.apiPrefix" type="text" placeholder="api" ng-required="tempFormEntries.apiPrefix.required"/>
							<div class="fieldMsg hint">What is the API prefix associated with this domain ?</div>
						</div>
					</div>
				</td>
			</tr>
			<tr class="form-group">
				<td>
					<div id="sitePrefix-wrapper">
						<div>
							<label class="ng-binding">Site (Sub Domain)</label>&nbsp;<span class="red">{{form.formData.sitePrefix}}.{{form.formData.domain}}</span>
							<input class="form-control" ng-model="form.formData.sitePrefix" type="text" placeholder="site" ng-required="tempFormEntries.sitePrefix.required"/>
							<div class="fieldMsg hint">What is the frontend site prefix associated with this domain ?</div>
						</div>
					</div>
				</td>
			</tr>
			<tr class="form-group">
				<td>
					<div id="nginxmemory-wrapper">
						<div>
							<label>Memory Limit Per Instance for Nginx (in MBytes)</label>
							<input type="number" ng-required="tempFormEntries.memory.required" ng-model="form.formData.memory" class="form-control" placeholder="500"/>
							<div class="fieldMsg hint">Set a custom memory limit for Nginx instances</div>
						</div>
					
					</div>
				</td>
			</tr>
			<tr class="form-group">
				<td>
					<div id="norecipe-wrapper">
						<label>I don't have a recipe yet, create one for me and use it</label>
						<label class="toggleSwitch">
							<input type="checkbox" ng-model="form.formData.norecipe" ng-change="tempFormEntries.norecipe.onAction()"><span class="buttonSlider round"></span>
						</label>
						<div class="fieldMsg hint">
							Specify if you want the deployer to create a new nginx recipe for you and use it
							to deploy the Nginx in this environment.
						</div>
					</div>
				</td>
			</tr>
			<tr class="form-group">
				<td>
					<div id="catalog-wrapper" ng-show="!form.formData.norecipe" >
						<label class="f-left">I already Prepared an Nginx Catalog Recipe</label>
						<select ng-required="tempFormEntries.catalog.required" class="form-control" ng-model="form.formData.catalog" ng-change="tempFormEntries.catalog.onAction()">
							<option ng-repeat="oneRecipe in nginxRecipes" value="{{oneRecipe._id}}">{{oneRecipe.name}}</option>
						</select>
						<div class="fieldMsg hint">Choose which catalog recipe to use to deploy this Nginx.</div>
					</div>
				</td>
			</tr>
			<tr>
				<td>
					<div ng-include="'modules/dashboard/environments/directives/deploy-nginx-customCatalogInputs.tmpl'"></div>
				</td>
			</tr>
		</tbody>
	</table>
</div>